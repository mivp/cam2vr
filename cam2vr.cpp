/* -LICENSE-START-
 ** Copyright (c) 2012 Blackmagic Design
 **
 ** Permission is hereby granted, free of charge, to any person or organization
 ** obtaining a copy of the software and accompanying documentation covered by
 ** this license (the "Software") to use, reproduce, display, distribute,
 ** execute, and transmit the Software, and to prepare derivative works of the
 ** Software, and to permit third-parties to whom the Software is furnished to
 ** do so, all subject to the following:
 **
 ** The copyright notices in the Software and this entire statement, including
 ** the above license grant, this restriction and the following disclaimer,
 ** must be included in all copies of the Software, in whole or in part, and
 ** all derivative works of the Software, unless such copies or derivative
 ** works are solely in the form of machine-executable object code generated by
 ** a source language processor.
 **
 ** THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ** IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ** FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 ** SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 ** FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 ** ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 ** DEALINGS IN THE SOFTWARE.
 ** -LICENSE-END-
 */
//
// LoopThroughWithOpenGLCompositing.cpp
// LoopThroughWithOpenGLCompositing
//

#include "cam2vr.h"
#include "OpenGLCapture.h"

#include <QtWidgets>
#include <QDebug>

Cam2VR::Cam2VR() : QMainWindow(), pOpenGLCapture(NULL)
{
    //ui = new Ui::Cam2VRDialog();
    //ui->setupUi(this);

    createActions();
    createMenus();

    pOpenGLCapture = new OpenGLCapture(this);

    //ui->verticalLayout->addWidget(pOpenGLCapture);
    setCentralWidget(pOpenGLCapture);

    if (!pOpenGLCapture->InitDeckLink())
		exit(0);

    show();
}

Cam2VR::~Cam2VR()
{
    if (pOpenGLCapture)
	{
        pOpenGLCapture->Stop();
        delete pOpenGLCapture;
        pOpenGLCapture = NULL;
	}

	delete ui;
	ui = NULL;
}

void Cam2VR::start()
{
    if (!pOpenGLCapture->Start())
		exit(0);
}

void Cam2VR::createActions()
{
    fullscreenAct = new QAction(tr("&Fullscreen"), this);
    fullscreenAct->setStatusTip(tr("Go fullscreen"));
    connect(fullscreenAct, &QAction::triggered, this, &Cam2VR::goFullScreen);
}

void Cam2VR::createMenus()
{
    showMenu = menuBar()->addMenu(tr("&Show"));
    showMenu->addAction(fullscreenAct);
}

void Cam2VR::goFullScreen()
{
    qDebug() << "go fullscreen";
    showFullScreen();
}

void Cam2VR::keyPressEvent(QKeyEvent *event)
{
    qDebug() << "key pressed" << event->key();
    switch (event->key())
    {
    case Qt::Key_Escape:
    case Qt::Key_N:
        showNormal();
        break;

    case Qt::Key_F:
        this->windowHandle()->setScreen(qApp->screens()[0]);
        showFullScreen();
        break;
    }
}
